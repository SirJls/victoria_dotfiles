# ----------------------------------------------------
# file:     $HOME/dotfiles/offlineimaprc
# author    jls - http://sjorssparreboom.nl
# vim:nu:ai:et:sw=4:ts=4:ft=conf
# ----------------------------------------------------


[general]
metadata = ~/.offlineimap
accounts = sjorssparreboom, school, gmail
maxsyncaccounts = 2
socktimeout = 60
ui = Basic

# this helper file lets you use python-keyring to store usernames / passwords
# ----------------------------------------------------
pythonfile = ~/scripts/offlineimap.py

[mbnames]
# Create a list of available mailboxes for mutt
# ----------------------------------------------------

enabled = yes

filename = ~/.mutt/mailboxes

header = "mailboxes "


# Exclude these mailboxes from the above mailbox list
# ----------------------------------------------------
folderfilter = lambda accountname, foldername: not re.search('(^bak.*|.*drafts$|.*spam$|.*sent$|.*trash$)', foldername)

peritem = "+%(accountname)s/%(foldername)s"
sep = .
footer = "\n"

[Account school]
localrepository = local-school
remoterepository = remote-school
autorefresh = 0
status_backend = sqlite

[Account gmail]
localrepository = local-gmail
remoterepository = remote-gmail
autorefresh = 0
status_backend = sqlite

[Account sjorssparreboom]
localrepository = local-sjorssparreboom
remoterepository = remote-sjorssparreboom
autorefresh = 0
status_backend = sqlite

[Repository local-sjorssparreboom]
type = Maildir
localfolders = ~/.mail/sjorssparreboom

# Translate names from local names to remote names:
# ----------------------------------------------------
nametrans = lambda foldername: re.sub('inbox', 'INBOX',
                               re.sub('sent', 'INBOX.Sent',
                               re.sub('drafts', 'INBOX.Drafts',
                               re.sub('trash', 'INBOX.Trash',
                               re.sub('spam', 'INBOX.Junk',
                               foldername)))))

[Repository remote-sjorssparreboom]
type = IMAP
auth_mechanisms = LOGIN
maxconnections = 2
remotehost     = www70.totaalholding.nl
remoteuser     = mail@sjorssparreboom.nl
remotepasseval = keyring.get_password('sjorssparreboom', 'mail')

# If using ssl, you will need to specify certificates to use with them
# ----------------------------------------------------
ssl            = yes
sslcacertfile  = /etc/ssl/certs/ca-certificates.crt
realdelete     = yes

# Translate remote names to local names:
# This one does:
# 1. Transforms names to lowercase
# 2. Replaces spaces with underscores
# ----------------------------------------------------
nametrans = lambda foldername: re.sub('.*INBOX$', 'inbox', 
                               re.sub('.*Sent$', 'sent', 
                               re.sub('.*Drafts$', 'drafts', 
                               re.sub('.*Trash$', 'trash', 
                               re.sub('.*Junk$', 'spam', 
                               foldername)))))

[Repository local-school]
type = Maildir
localfolders = ~/.mail/school

# Translate names from local names to remote names:
# ----------------------------------------------------
nametrans = lambda foldername: re.sub('inbox', 'INBOX',
                               re.sub('sent', 'Sent Items',
                               re.sub('drafts', 'Drafts',
                               re.sub('trash', 'Deleted Items',
                               re.sub('spam', 'Junk Email',
                               foldername)))))

[Repository remote-school]
type = IMAP
auth_mechanisms = LOGIN
maxconnections = 2
remotehost     = outlook.office365.com
# remotehost     = imap.hro.nl
remoteuser     = 0890040@hr.nl
remotepasseval = keyring.get_password('school', '0890040')

# If using ssl, you will need to specify certificates to use with them
# ----------------------------------------------------
ssl            = yes
sslcacertfile  = /etc/ssl/certs/ca-certificates.crt
realdelete     = yes

# Translate remote names to local names:
# This one does:
# 1. Transforms names to lowercase
# 2. Replaces spaces with underscores
# ----------------------------------------------------
nametrans = lambda foldername: re.sub('.*INBOX$', 'inbox', 
                               re.sub('.*Sent Items$', 'sent', 
                               re.sub('.*Drafts$', 'drafts', 
                               re.sub('.*Deleted Items$', 'trash', 
                               re.sub('.*Junk Email$', 'spam', 
                               foldername)))))

folderfilter = lambda foldername: foldername not in ['Calendar', 'Clutter', 'Contacts', 'Journal', 'Notes', 'Outbox', 'Tasks']

[Repository local-gmail]
type = Maildir
localfolders = ~/.mail/gmail
# Note the nametrans below in remote-gmail: it undoes this one
# ----------------------------------------------------
nametrans = lambda folder: re.sub('inbox', 'INBOX',
                           re.sub('trash', '[Gmail].Bin',
                           re.sub('spam', '[Gmail].Spam',
                           re.sub('drafts', '[Gmail].Drafts',
                           re.sub('sent', '[Gmail].Sent Mail',
                           folder)))))

[Repository remote-gmail]
type = Gmail
type = IMAP
auth_mechanisms = LOGIN
maxconnections = 2
remotehost     = imap.gmail.com
remoteuser     = jlssparreboom@gmail.com
remotepasseval = keyring.get_password('gmail', 'jls')

# If using ssl, you will need to specify certificates to use with them
# ----------------------------------------------------
ssl = yes
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
realdelete = yes
# Note the nametrans above in local-gmail: it undoes this one
# ----------------------------------------------------
nametrans = lambda folder: re.sub(',*INBOX$', 'inbox',
                           re.sub('.*Spam$', 'spam',
                           re.sub('.*Bin$', 'trash',
                           re.sub('.*Drafts$', 'drafts',
                           re.sub('.*Sent Mail$', 'sent',
                           folder)))))
# We don't want to sync all mail, it would pull everything again
# folderfilter = lambda foldername: foldername not in ['[Gmail].All Mail']

